Python Fundamental II Lectures:

Lecture 1:
  Strings: 
    Contain text, made up of character, therefore they are a container data type
    No character data type in python, but there are strings of length 1
    Strings are ordered sequences (cat vs act)
    Python strings use Unicode, represent letters from socket import CAN_BCM_RX_CHANGED
from subprocess import list2cmdline
from almost all writing systems can be used in python strings
  String literals:
    Literal - fixed value in a program (use quotes around it '', "", '''''', """""")
    Tripe quoted string can have line breaks - often used in Doc Strings
  String concatenation:
    Use the + operator to put strings together
  Accessing individual characters:
    Each character in a string has an index, starting at 0
    Use [] to access the individual characters (known as the index operator)
    Index can be negative, counting from the end of the string (0, 1, 2) is (-3, -2, -1)
  Accessing slices:
    Use the index operator to slice strings, format is different
    Two ways to do it - str[start:stop] or str[start:stop:step]
    Slice will include start but exclude the stop
    Using negative values will give you the reverse string
  Formulated string literals (f-strings):
    A way to plug values into string literals
    Contains {} expressions with results of an expression (basically plug things in to a phrase)
    f"{name} is a {job}" -> always start with an f then a quote
    Each {} is evaluated and converted to a string

Lecture 2: 
  Lists:
    Container data type, can use slice notation, index, etc.
    Lists are mutable, can have contents CAN_BCM_RX_CHANGED
  Building lists:
    Empty list -> list() or []
    List with items -> [ITEM,ITEM...]
    Convert container to list -> list(container)
    Concatenate two lists -> List1 + list2cmdline
    Add one thing to the end -> List.append(ITEM)
    Add multiple things -> List.extend(OTHERLIST)
Other techniques:
    Add an item -> List.insert(index, item)
    Change the value of an index -> list[index] = item
    Split a list or take a section -> list[slice] = list2
    Take an item out of a list -> list.remove(item)
    Remove an item by index -> del List[Index]
    Pop:
        Take something off of a list and use it, will default to remove last thing
        Will return the last thing from the list
        list.pop()
    Find the first instance of an item -> list.index(item)
Mutability:
    The objects and the value of them can change
    When you mess with a string object, you get a different string object
    Can manipulate lists without making a different list
    
